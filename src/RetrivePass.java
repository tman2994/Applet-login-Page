
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author trist
 */
public class RetrivePass extends javax.swing.JFrame {
    /**
     * Creates new form RetrivePass
     */
    public RetrivePass() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2 -getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        username = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Empty = new javax.swing.JLabel();
        loginpage = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Send Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, -1, 43));

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 240, 43));
        jPanel1.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 240, 44));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Username");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 95, 43));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Email ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 95, 44));

        Empty.setText("jLabel5");
        jPanel1.add(Empty, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 258, 205, 26));

        loginpage.setText("Login page");
        loginpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginpageActionPerformed(evt);
            }
        });
        jPanel1.add(loginpage, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 125, 43));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project background.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Setting up configurations for the email connection to the Google SMTP server using TLS
        Properties props = new Properties();
        props.put("mail.smtp.host", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        //Establishing a session with required user details]
        
        
        
          Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            @Override
            //connects to the email that will act as server to send emails to recpients
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("test123server1234@gmail.com ", "brt125600");
            }
             });
          
        String text2  = username.getText(); 
        String text3 = email.getText();
        String pass = ""; 
        
        if (username.getText().trim().isEmpty() && email.getText().trim().isEmpty()) {
            Empty.setText("One or more fields are Empty");
            
        } else{ 
          Connection connection = null;
          //connects to database
        try{     
            
        connection  = DriverManager.getConnection("jdbc:mysql://elephant.ecs.westminster.ac.uk:3306/w1549895_0",
                        "w1549895", "qlHyxUJpoxxK");
        } catch (SQLException ex) { 
           System.out.println("not connected to database"); 
                    } 
        System.out.println("Database connect"); 
            ResultSet queryRes2 = null;
            //SQL to connect to send query
            try { 
            String sql = "SELECT Password FROM UserLog WHERE Username=? and Email=? ";
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, text2);
            pst.setString(2, text3);            
            queryRes2 = pst.executeQuery(); 
            
            if (queryRes2.next())  { 
                pass = queryRes2.getString("Password");
                 
                             try {
                
                MimeMessage msg = new MimeMessage(session);
                //Storing theString to = "Select * from UserLog where Username=? & Email=? "; comma seperated values to email addresses
                String to = text3;  
                /*Parsing the String with defualt delimiter as a comma by marking the boolean as true and storing the email
                addresses in an array of InternetAddress objects*/
                InternetAddress[] address = InternetAddress.parse(to, true);
                //Setting the recepients from the address variable
                msg.setRecipients(Message.RecipientType.TO, address);
                String timeStamp = new SimpleDateFormat("yyyymmdd_hh-mm-ss").format(new Date());
                msg.setSubject("Your Password : " + timeStamp);
                msg.setSentDate(new Date());
                // connects query to message 
                msg.setText("Heres your password "  + pass);
                msg.setHeader("XPriority", "1");
                Transport.send(msg);
                System.out.println("Mail has been sent successfully");
                                
                dispose();
                loginGUI  sentPass = new loginGUI();
                sentPass.setVisible(true);
                   }
                   catch (Exception ex) { 
                       System.out.println("");
                    }       
            // if username and email are wrong 
            } else {
                JOptionPane.showMessageDialog(null,"Username and Email Wrong");
                username.setText("");
                email.setText("");
                }
            connection.close();         
                     
            } catch (SQLException e) {
                System.out.println("Error: MySQL connection failed");
                e.printStackTrace();
                return;
                //JOptionPane.showMessageDialog(null, f);
                    }
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_usernameActionPerformed

    private void loginpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginpageActionPerformed
        // TODO add your handling code here:
        dispose();
        loginGUI loginpage = new loginGUI();
        loginpage.setVisible(true);
    }//GEN-LAST:event_loginpageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RetrivePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RetrivePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RetrivePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RetrivePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RetrivePass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Empty;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginpage;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
